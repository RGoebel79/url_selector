/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */

'use strict';

module.exports = require('./lib/express');


var express = require('express');
var path = require('path');
var bodyParser = require('body-parser');
var comp = require('./comp')
var app = express();
var router = express.Router();
const https = require('https');
//google API keys and ids
const custID = '009637816073108880163:nfsysoqnztc';
const key = 'AIzaSyBXGkVilmqEN0KSDAaQy1BlVVIA8r4nS6w';

var returnObj = []; //object sent through API
var time = 1000; //delay timer for response

//json object prototype
function data(name, domain){
	this.name = name;
	this.domain = domain;
};


//body-parser
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: false}));


// view engine
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
//set static path
app.use(express.static(path.join(__dirname, 'public')));

//home page
app.get('/', comp.home);
app.post('/', comp.home_post_handler);
app.post('/add', comp.add_handler);
	
// body...
app.get('/api', function(req, res){
	var names = req.query["company"];
	
//calls google API using for loop
function search(name){	
	  var temp = "";
    //var tempArr= ""; not used for now

   	time = 1000;
    for(var j = 0; j < names.length; j++){
        
		temp = name[j];
    //get request
    	function got(cName){ https.get('https://www.googleapis.com/customsearch/v1?key='+ key +'&cx=' + custID + '&q=' + temp, function (res){
   
      		res.setEncoding("utf8");

      		var body = "";

      		res.on("data", function(data){
        		body += data;
       			});
  
      		res.on("end", function() {
        		body = JSON.parse(body);
          		console.log(body.searchInformation.searchTime);
          		time += body.searchInformation.searchTime * 1000;
          //check for duplicates
        if (returnObj.hasOwnProperty(body.items[0].link)==false){
              //create object using json response
          		returnObj.push(new data (cName, body.items[0].link));
         		console.log(returnObj);
	            };
   			});
 		}).on('error', function(err){
      					console.error(err)});
 				};
        //call get request function
       	got(temp);
    	};
 	};

  //call search to get URLs
 	search(names);
  //the timer I have to use until I figure out why it sends blank objects
 	setTimeout(function(){
	res.send(JSON.stringify(returnObj));
		}, time);
 	returnObj = [];
 	time = 1000;
});

app.listen(process.env.PORT || 3000, function(){
	console.log("Server running on 3000");
});